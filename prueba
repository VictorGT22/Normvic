# NORMVIC

The NORMVIC is a tool to check that the source code respects the schoolâ€™s norm AND CORRECTS ERRORS IT SELF.

## INSTALL

Comando para instalar

## HOW WORKS
### Flags

|   Flags   |       Action       |
|-----------|--------------------|
| -h        | Show help          |
| no flag   | Evaluate .h and .c |
| -C        | Evaluate only .c   |
| -H        | Evaluate only .h   |
| -r        | Correct the errors |

### Type error

|   Error    |       Description     |
|------------|-------------------|
|    ðŸ”´     | No fixable        |
|    ðŸŸ¢     | Fixable   |
|    ðŸŸ¡     | Why you make this error ?  |


### ERRORS HANDELED

|   TYPE   |       ERROR MSG       |       DESCRIPTION      |
|-----------|----------------------|------------------------|
|    ðŸŸ¢     | ERROR_HEADER         | Header corrupted, try to verify |
|    ðŸŸ¢     | ERROR_TRALING_SPACE  | Traling spaces at the end of the line |
|    ðŸŸ¢     | ERROR_WRONG_TAB      | There is a Tab, where needs to be a Space |
|    ðŸŸ¢     | ERROR_WRONG_SPACE    | There is a Tab, where needs to be a Space |
|    ðŸŸ¢     | ERROR_SPACE_NAME_FUNC | Space between function name and brakets  |
|    ðŸŸ¢     | ERROR_CONSECUTIVE_NEWLINES | Two o more consecutive new lines |
|    ðŸŸ¢     | ERROR_HEADER_FILE    | Corrupted initialization header file |
|    ðŸŸ¢     | ERROR_INCLUDE_HEADER_FILE | Error Include in header file |
|    ðŸŸ¢     | ERROR_NO_EMPTY_LINE      | Error wrong empty line|
|    ðŸŸ¢     | ERROR_WRONG_EMPTY_LINE | Error Include in header file |
|    ðŸ”´     | ERROR_STRUCT_NAME     | Struct abreviation needs to start with 't_ |
|    ðŸŸ¢     | ERROR_SEMICOLON      | Space/Tab before semicolon at the endo of the line |
|    ðŸŸ¢     | ERROR_ENDIF      | Error at the ENDIF  |

|    ðŸŸ¢     |       |  |




ERROR_ENDIF "Error at the ENDIF\n"
ERROR_VAR_ASIGNATION "Variable inicialitzation and asignation in the same line\n"
ERROR_MANY_VAR "To many variables inside a function\n"
ERROR_NO_SPACE_KEYWORD "Needs to be a space after a keyword\n"
ERROR_SPACE_BEFORE_INCREMENTAL "Space before a incremental operator\n"
ERROR_SPACE_AFTER_INCREMENTAL "Space after a incremental operator\n"
ERROR_NO_SPACE_BEFORE_OPERATOR "Need to be a Space before a operator\n"
ERROR_NO_SPACE_AFTER_OPERATOR "Need to be a Space after a operator\n"
ERROR_SPACE_BEFORE_STRUCT_OPERATOR "Space before a struct operator\n"
ERROR_SPACE_AFTER_STRUCT_OPERATOR "Space after a struct operator\n"
ERROR_TO_LONG_LINE "Line to long, more than 80 columns\n"
ERROR_VARIBALES_FOLLOWED "Variable declaration must be at the start of the function\n"
ERROR_INDENTATION "Wrong Indentation\n"
ERROR_COMMENT_FUNCTION "Comment inside a function\n"
ERROR_NO_EMPTY_LINE_VAR "Error no empty line between Variables and your code\n"
ERROR_OPPERATOR_END "Operator at the end of the line\n"
ERROR_BRACKET_KEYWORD "Curly bracket in the same line than a keyword or prototipe function\n"
ERROR_BRACKET_NOEMPTY "Curly bracket must be alone in the line\n"
ERROR_CLOSE_BRACKET_NOEMPTY "No empty line after a close curly bracket\n"
ERROR_ENTER_FUNCTIONS "Need to be a empty line between functions\n"
ERROR_ENTER_END_FILE "Need to be a empty line at the end of the file\n"
ERROR_NAME_MACRO "Macros needs to be named with all letters uppercase\n"
ERROR_NUM_FUNCTIONS "Too many functions inside a file "
ERROR_NUM_LINES "Too many lines in a function "
ERROR_FILE_NAME "Files and folders names must be in lowercase\n"
ERROR_SPACE_BEFORE_COMMA "Must be no space before a comma\n"
ERROR_SPACE_AFTER_COMMA "Must be a space after a comma\n"



### Recomendations

Keep your code tidy:

- Project
  
  - Includes
    - projectname.h
    - projectname_struct.h

  - Sources
    - Folder 1
       - file.c
       - file.c
    - Folder 2
       - file.c
       - file.c

  - MAKEFILE
 
